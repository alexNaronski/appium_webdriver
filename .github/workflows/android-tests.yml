name: Android Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Download APK and ChromeDriver
        run: |
          mkdir -p appium_webdriver/app
          curl -o appium_webdriver/app/app-debug.apk http://example.com/path/to/app-debug.apk
          curl -o appium_webdriver/app/chromedriver http://example.com/path/to/chromedriver
          chmod +x appium_webdriver/app/chromedriver

      - name: Install Android SDK
        uses: android-actions/setup-android@v2

      - name: Install emulator dependencies
        run: sudo apt-get update && sudo apt-get install -y libvirt-daemon-system libvirt-clients bridge-utils libglu1-mesa

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --force
          echo "hw.gpu.enabled=no" >> ~/.android/avd/test.avd/config.ini
          echo "hw.gpu.mode=off" >> ~/.android/avd/test.avd/config.ini
          echo "snapshot.present=false" >> ~/.android/avd/test.avd/config.ini

      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect -accel off -no-snapshot-save &
          adb wait-for-device
          sleep 60

      - name: Restart ADB server
        run: |
          adb kill-server
          adb start-server
          adb devices

      - name: Check emulator status
        run: |
          adb devices
          adb shell getprop init.svc.bootanim
          until [[ $(adb shell getprop sys.boot_completed) -eq 1 ]]; do sleep 5; done

      - name: Install Appium and WebDriverIO
        run: |
          npm install -g appium
          npm install

      - name: Run Tests
        run: |
          npx wdio run wdio.conf.js

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline --save-dev
          allure generate allure-results --clean -o allure-report
          allure open allure-report